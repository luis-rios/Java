TIPOS DE VARIABLES Y DATOS.
  Las variables son contenedores que almacenan los datos durante la ejecucion del programa
  Los tipos de datos que hay en java son:
  Primitivos: son los de tipo int,double,string,chat,float,boolean.
  No primitivos: pertenecen a las clases, matrices e interfaces.


FUNCIONES
  Una funcion es un bloque de codigo que se puede repetir en distintas ocaciones.Este se declara fuera del metodo main.
  Declaracion del metodo:

  Forma 1: convirtiendo la funcion en estatica.

    public static double SumarNumero(double numero1,double numero2){
      return numero1 + numero2;
    }
  Forma 2: creando una unstancia de la clase principal.
    public double SumarNumero(double numero1, double numero2){
      return numero1 + numero2;
    }

  Llamado del metodo
  Forma 1: 
    SumarNumero(valor1,valor2)  
  
  Forma 2: 
    (nombre de la clase principal)==> Funciones funciones = new Funciones();
    funciones.SumarNumero(valor1,valor2)
    

OPERADORES DE ASIGNACION:
  Existen los operadores para arealizar operaciones basicas como lo son:
  + , - , * , / , % 

  También están metodos de la clase Math:

  abs(double a): Devuelve el valor absoluto de un valor double.
  abs(float a): Devuelve el valor absoluto de un valor float.
  abs(int a): Devuelve el valor absoluto de un valor int.
  abs(long a): Devuelve el valor absoluto de un valor long.

  (Valor maximo y minimo)
  max(double a, double b): Devuelve el mayor de dos valores double.
  max(float a, float b): Devuelve el mayor de dos valores float.
  max(int a, int b): Devuelve el mayor de dos valores int.
  max(long a, long b): Devuelve el mayor de dos valores long.
  min(double a, double b): Devuelve el menor de dos valores double.
  min(float a, float b): Devuelve el menor de dos valores float.
  min(int a, int b): Devuelve el menor de dos valores int.
  min(long a, long b): Devuelve el menor de dos valores long.

  (Redondeo)
  ceil(double a): Devuelve el menor valor double que es mayor o igual a a y es un entero.
  floor(double a): Devuelve el mayor valor double que es menor o igual a a y es un entero.
  rint(double a): Devuelve el valor double que es más cercano al entero más cercano a a.
  round(double a): Devuelve el valor long que es más cercano al entero más cercano a a.
  round(float a): Devuelve el valor int que es más cercano al entero más cercano a a.

  (Exponenciación y algoritmos)
  exp(double a): Devuelve e elevado a la potencia de a.
  expm1(double x): Devuelve e elevado a la potencia de x menos uno.
  log(double a): Devuelve el logaritmo natural (base e) de a.
  log10(double a): Devuelve el logaritmo en base 10 de a.
  log1p(double x): Devuelve el logaritmo natural de 1 + x.

  (Potencias y raices)
  exp(double a): Devuelve e elevado a la potencia de a.
  expm1(double x): Devuelve e elevado a la potencia de x menos uno.
  log(double a): Devuelve el logaritmo natural (base e) de a.
  log10(double a): Devuelve el logaritmo en base 10 de a.
  log1p(double x): Devuelve el logaritmo natural de 1 + x.

  (Genera numeros aleatoreos)
  randon(): devuelve un número aleatoreo double mayor o igual que '0.0' y menor que '1.0'

Loops:
  Son sentencias siclicas, se utilizan cuando es necesario repetir un bloque de codigo
  
  (For)
  El siclo for se utliza cuando se conoce el numero exacto de iteraciones a realizar.
  Declaración:
  for(declaracion;condicional;incremento-decremento){cuerpo de ejecucion}

  (while)
  El siclo while se utiliza cuando no se conoce el numero de iiteraciones a realizar.
  Declaración:
  while(condicion){cuerpo de ejecucion}

  (do while)
  El siclo de ejecucion "do while" se utiliza cuando no se conoce el numero de iteraciones Y
  se debe ejecutar almenos 1 vez.
  Declaracion:
  do {cuerpo de ejecucion} while(condicion)

  (forEach)
  El siclo "forEach" es utlizado para recorrer matrices o colecciones.
  Declaracion:
  for(data_type variable:array_name){código de ejecucion}

  
